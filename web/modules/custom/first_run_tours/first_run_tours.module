<?php

/**
 * @file
 * Contains first_run_tours.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\tour\Entity\Tour;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\NodeType;
use Drupal\first_run_tours\Form\ToursForm;

/**
 * Implements hook_help().
 */
function first_run_tours_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the first_run_tours module.
    case 'help.page.first_run_tours':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Extends the Tour module to create tours specific to node add/edit pages') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_page_bottom().
 */
function first_run_tours_page_bottom(array &$page_bottom) {
  $request = \Drupal::service('request_stack')->getCurrentRequest()->get('_route_params');
  $route_name = \Drupal::routeMatch()->getRouteName();

  // Must be on /node/add/{nodetype} page.
  if ($route_name !== 'node.add') {
    return;
  }

  $ct_machine_name = $request['node_type']->get('type');
  $node_type = NodeType::load($ct_machine_name);

  // "Enable tour" checkbox must be checked.
  if ($node_type == NULL || $node_type->getThirdPartySetting('first_run_tours', $ct_machine_name) == 0) {
    return;
  }

  if (isset($ct_machine_name)) {
    $results = \Drupal::entityQuery('tour')
      ->condition('id', ToursForm::TOUR_ID_PREFIX . $ct_machine_name)
      ->execute();

    if (!empty($results) && $tours = Tour::loadMultiple(array_keys($results))) {
      if (!empty($tours)) {
        $view_builder = \Drupal::entityTypeManager()->getViewBuilder('tour');
        $page_bottom['tour'] = $view_builder->viewMultiple($tours, 'full');
      }
    }
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function first_run_tours_form_tour_form_alter(&$form, FormStateInterface $form_state) {
  if ($form_state->getFormObject()->getEntity()->get('module') == 'first_run_tours') {
    $form['module']['#disabled'] = 'disabled';
    $form['routes']['#disabled'] = 'disabled';
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete() for tour entities.
 */
function first_run_tours_tour_delete($entity) {
  if ($entity->getModule() == 'first_run_tours') {
    $ct_machine_name = str_replace(ToursForm::TOUR_ID_PREFIX, '', $entity->id());
    $node_type = NodeType::load($ct_machine_name);

    if ($node_type !== NULL && $node_type->getThirdPartySetting('first_run_tours', $ct_machine_name)) {
      $node_type->setThirdPartySetting('first_run_tours', $ct_machine_name, 0)->save();
    }
  }
}
