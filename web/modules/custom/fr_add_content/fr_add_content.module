<?php

/**
 * @file
 * Contains fr_add_content.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\NodeType;
use Drupal\file\Entity\File;
use Drupal\Component\Utility\Xss;
use Drupal\Component\Utility\UrlHelper;

/**
 * Implements hook_help().
 */
function fr_add_content_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the mass_admin_pages module.
    case 'help.page.mass_admin_pages':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Adds a custom add content page that enhances the node add list with extra information.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function fr_add_content_theme($existing, $type, $theme, $path) {
  return [
    'first_run__node_add_list' => [
      'template' => 'first-run--node-add-list',
      'base hook' => 'node_add_list',
    ],
    'first_run__page__node__add' => [
      'template' => 'first-run--page--node--add',
      'render-element' => 'page',
      'base hook' => 'page',
    ],
  ];
}

/**
 * Add custom theme template for node add list.
 */
function fr_add_content_theme_suggestions_node_add_list_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'first_run__node_add_list';
}

/**
 * Add custom theme template for node add/edit page.
 */
function fr_add_content_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name == 'node.add_page') {
    $suggestions[] = 'first_run__page__node__add';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function fr_add_content_preprocess_page(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name == 'node.add_page') {
    $config = \Drupal::configFactory()->get('fr_add_content.settings');
    $intro_text = $config->get('intro_text');

    $variables['page']['fr_content']['intro_text'] = [
      '#markup' => Xss::filterAdmin($intro_text),
      '#type' => 'container',
      '#attributes' => [
        'class' => [
          'add-content-intro-text',
        ],
      ],
    ];
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function fr_add_content_form_node_type_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  /** @var \Drupal\node\NodeTypeForm $node_type_form */
  $node_type_form = $form_state->getFormObject();
  /** @var \Drupal\node\Entity\NodeType $node_type */
  $node_type = $node_type_form->getEntity();

  $key_components_config = $node_type->getThirdPartySetting('fr_add_content', 'node_type_key_components', NULL);
  $live_example_config = $node_type->getThirdPartySetting('fr_add_content', 'node_type_live_example', NULL);
  $help_link_config = $node_type->getThirdPartySetting('fr_add_content', 'node_type_help_link', NULL);
  $thumbnail_config = $node_type->getThirdPartySetting('fr_add_content', 'node_type_thumbnail');

  $form['node_type_key_components'] = [
    '#type' => 'textarea',
    '#title' => t('Key Components'),
    '#default_value' => $key_components_config,
    '#weight' => 0,

  ];

  $form['node_type_live_example'] = [
    '#type' => 'url',
    '#title' => t('Link to live example'),
    '#default_value' => $live_example_config,
    '#maxlength' => 255,
    '#weight' => 0,
    '#size' => 30,
  ];

  $form['node_type_help_link'] = [
    '#type' => 'url',
    '#title' => t('Link to help article'),
    '#default_value' => $help_link_config,
    '#weight' => 0,
    '#maxlength' => 255,
    '#size' => 30,
  ];

  $form['node_type_thumbnail'] = [
    '#type' => 'managed_file',
    '#title' => t('Thumbnail'),
    '#upload_validators' => [
      'file_validate_is_image'      => [],
      'file_validate_extensions' => ['gif png jpg jpeg'],
      'file_validate_size' => [25600000],
    ],
    '#theme' => 'image_widget',
    '#preview_image_style' => 'medium',
    '#upload_location' => 'public://node_type_thumbnail',
    '#required' => FALSE,
    '#default_value' => $thumbnail_config,
    '#weight' => 0,
  ];

  $form['#entity_builders'][] = '_fr_add_content_node_type_form_builder';

}

/**
 * Entity form builder for the node type edit form.
 * 
 */
function _fr_add_content_node_type_form_builder($entity_type, NodeType $node_type, &$form, FormStateInterface $form_state) {

  $node_type->setThirdPartySetting('fr_add_content', 'node_type_key_components', $form_state->getValue('node_type_key_components'));
  $node_type->setThirdPartySetting('fr_add_content', 'node_type_live_example', $form_state->getValue('node_type_live_example'));
  $node_type->setThirdPartySetting('fr_add_content', 'node_type_help_link', $form_state->getValue('node_type_help_link'));

  if ($form_state->getValue('node_type_thumbnail')) {
    $node_type->setThirdPartySetting('fr_add_content', 'node_type_thumbnail', $form_state->getValue('node_type_thumbnail'));
  }
  else {
    $node_type->unsetThirdPartySetting('fr_add_content', 'node_type_thumbnail');
  }

  if ($image = $form_state->getValue('node_type_thumbnail')) {
    if (!empty($image['fids'][0]) && $file = File::load($image['fids'][0])) {
      $file->setPermanent();
      $file->save();
    }
  };

}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Prepare variables for node type display in node-add-list.
 */
function fr_add_content_preprocess_node_add_list(&$variables) {
  if (!empty($variables['content'])) {
    foreach ($variables['content'] as $type) {

      $config = $type->getThirdPartySetting('fr_add_content', 'node_type_key_components');
      if (isset($config)) {
        $variables['types'][$type->id()]['key_components'] = [
          '#title' => 'Key Components',
          '#type' => 'item',
          '#markup' => Xss::filterAdmin($config),
        ];
      }

      $variables['types'][$type->id()]['live_example'] = UrlHelper::filterBadProtocol($type->getThirdPartySetting('fr_add_content', 'node_type_live_example'));
      $variables['types'][$type->id()]['help_link'] = UrlHelper::filterBadProtocol($type->getThirdPartySetting('fr_add_content', 'node_type_help_link'));
    }
  }
}
